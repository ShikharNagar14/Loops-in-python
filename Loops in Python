#there are two types of loops in python 
# 1. while loop
# 2. for loop
'''i=0
while i <10:
    print("Yes " +str(i))
    i=i+1  
    print("Done")

i=0
while i<=50:
    print(i)
    i=i+1

i=0
while i<5:
    print("Harry")
    i=i+1

fruits=['Banana','Apple','Watermaelon','Mangoes']
i=0
while i<len(fruits):
    print(fruits[i])
    i=i+1

#for loop:
fruits=['Banana','Apple','Watermaelon','Mangoes']
for item in fruits:
    print(item)

for i in range(1,8 ,2):
    print(i)

#for loop with else
for i in range (10):
    print(i)
else:
    print("this is inside else of for ")

#break statement :
for i in range(10):
    print(i)
    if i==5:
        break

# for continue :
for i in range(10):
    if i==5:
        continue
    print(i)

#pass statement:
i=4
if i>0:
    i=i+1
    pass
print("SHIKHAR")

while i>6:
    pass
print("Shikhar")'''

#PRACTICE TEST:
'''num=int(input("enter the number: "))
for i in range(1,11):
    #print(str(num)+"x"+str(i)+"="+str(i*num))
    print(f"{num}x{i}={num*i}")

l1={"Harry","Sachin","Sachin","Rahul"}
for name in l1:
    if name.startswith("S"):
        print("Hello"+ name)

num=int(input("enter the number: "))
while i in range(1,11):
    #print(str(num)+"x"+str(i)+"="+str(i*num))
    print(f"{num}x{i}={num*i}")'''

'''num=int(input("Enter the number:"))
prime=True
for i in range(2,num):
    if (num%i==0):
        prime=False
        break
if prime:
    print("this number is prime")
else:
    print("this number is not prime")'''

'''num=int(input("Enter the number:"))
factorial=1
for i in range (1,num+1):
    factorial=factorial*1
print(f"the factorial of  {num} is {factorial}")'''


'''n=4
for i in range(4):
    print("*"* (i+1))

n=3 
for i in range (3):
    print(" "*(n-i-1),end="")
    print("*"*(2*i+1),end="")
    print(""*(n-i-1))
n=4
for i in range(5):
    print(""*(n-i-1),end="")
    print("*"*(3*i+1),end="")
    print(""*(n-i-1))'''


'''def recur_fibo(n):
    if n<=1:
        return n
    else:
        return(recur_fibo(n-1)+recur_fibo(n-2))

n=int(input())
print("Fibonacci Secquence:")
for i in  range(n):
    print(recur_fibo(i))'''
